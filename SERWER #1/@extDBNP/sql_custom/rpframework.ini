[Default]

Version = 1  
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = ";[]"
;; List of characters to strip out  
Strip Chars Mode = 0
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars  
;;     Note: Logging on works when sending data to database.


; --------------------------------------------------------------------------------
; SQL Statements https://bitbucket.org/torndeco/extdb3/wiki/extDB3%20-%20sql_custom.ini
; --------------------------------------------------------------------------------


; --------------------------------------------------------------------------------
; Update
; --------------------------------------------------------------------------------

[updatePlayerInfo]
SQL1_1 = UPDATE users SET items=?, cash=?, bank=?, position=?,messages=?, statuses=?, housecontent=?, shopcontent=?, phoneBackground=?, houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11

[updatePlayerInfoNoShopNoHouse]
SQL1_1 = UPDATE users SET items=?, cash=?, bank=?, position=?, messages=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6

[updatePlayerInfoNoShopNoHouseNoMoney]
SQL1_1 = UPDATE users SET items=?, position=?, messages=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4

[updatePlayerInfoNoGear]
SQL1_1 = UPDATE users SET cash=?, bank=?, position=?,messages=?, statuses=?, housecontent=?, shopcontent=?, phoneBackground=?,houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10

[updatePlayerInfoNoGearNoMoneyNoShop]
SQL1_1 = UPDATE users SET position=?,messages=?, statuses=?, phoneBackground=?, houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6

[updatePlayerInfoNoGearNoShopNoHouse]
SQL1_1 = UPDATE users SET cash=?, bank=?, position=?, messages=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3, 4, 5

[updatePlayerInfoNoGearNoShopNoHouseNoMoney]
SQL1_1 = UPDATE users SET position=?, messages=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3

[updatePlayerInv]
SQL1_1 = UPDATE users SET items=? WHERE uid=?
SQL1_INPUTS = 1, 2

[updatePlayerPhoneBackground]
SQL1_1 = UPDATE users SET phoneBackground=? WHERE uid=?
SQL1_INPUTS = 1, 2

[updatePlayerMoney]
SQL1_1 = UPDATE users SET cash=?, bank=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3

[updatePlayerMoneyWallet]
SQL1_1 = UPDATE users SET cash=? WHERE uid=?
SQL1_INPUTS = 1, 2

[updatePlayerMoneyATM]
SQL1_1 = UPDATE users SET bank=? WHERE uid=?
SQL1_INPUTS = 1, 2

[updateHouseLevel]
SQL1_1 = UPDATE users SET houselevel=? WHERE uid=?
SQL1_INPUTS = 1, 2

[updatePlayerStatuses]
SQL1_1 = UPDATE users SET statuses=? WHERE uid=?
SQL1_INPUTS = 1, 2

[updatePlayerRespawn]
SQL1_1 = UPDATE users SET respawn=? WHERE uid=?
SQL1_INPUTS = 1, 2

[updatePlayerPosition]
SQL1_1 = UPDATE users SET position=? WHERE uid=?
SQL1_INPUTS = 1, 2


[updatePlayerHouseShop]
SQL1_1 = UPDATE users SET housecontent=?, shopcontent=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3

[updateHouse]
SQL1_1 = UPDATE users SET housecontent=? WHERE uid=?
SQL1_INPUTS = 1, 2

[updateShop]
SQL1_1 = UPDATE users SET shopcontent=? WHERE uid=?
SQL1_INPUTS = 1, 2

[updateConnected_connected]
SQL1_1 = UPDATE users SET connected=1, name=? WHERE uid=?
SQL1_INPUTS = 1, 2

[updateConnected_disconnected]
SQL1_1 = UPDATE users SET connected=0 WHERE uid=?
SQL1_INPUTS = 1

[updateMafiaATM]
SQL1_1 = UPDATE mafiaATM SET atm=?
SQL1_INPUTS = 1

[updateConnectedStartup]
SQL1_1 = UPDATE users SET connected=?
SQL1_INPUTS = 1

[updateResetRespawn]
SQL1_1 = UPDATE users SET respawn=?
SQL1_INPUTS = 1

[updateLicense]
SQL1_1 = UPDATE garage SET license=? WHERE license=?
SQL1_INPUTS = 1, 2

[updateVehicleFuelDamage]
SQL1_1 = UPDATE garage SET fuel=?, damage=? WHERE license=?
SQL1_INPUTS = 1, 2, 3

[updateVehClass]
SQL1_1 = UPDATE garage SET class=? WHERE license=?
SQL1_INPUTS = 1, 2

[updateVehOwner]
SQL1_1 = UPDATE garage SET owner=? WHERE license=?
SQL1_INPUTS = 1, 2

[updateVehOwnerPay]
SQL1_1 = UPDATE users SET bank=bank + ? WHERE uid=?
SQL1_INPUTS = 1, 2

[updateMayor]
SQL1_1 = UPDATE mayor SET mayor=1 WHERE uid=?
SQL1_INPUTS = 1

[update]
SQL1_1 = UPDATE users SET ?=? WHERE uid=?
SQL1_INPUTS = 1, 2, 3

[resetMayor]
SQL1_1 = UPDATE mayor SET mayor=? WHERE mayor=1
SQL1_INPUTS = 1

[promoteCop]
SQL1_1 = UPDATE users SET cop=? WHERE uid=?
SQL1_INPUTS = 1, 2

[promoteEms]
SQL1_1 = UPDATE users SET ems=? WHERE uid=?
SQL1_INPUTS = 1, 2

[promoteFire]
SQL1_1 = UPDATE users SET fire=? WHERE uid=?
SQL1_INPUTS = 1, 2

[promoteMafia]
SQL1_1 = UPDATE users SET mafia=? WHERE uid=?
SQL1_INPUTS = 1, 2

[promoteLegal]
SQL1_1 = UPDATE users SET legal=? WHERE uid=?
SQL1_INPUTS = 1, 2

[vehicleChangeColor]
SQL1_1 = UPDATE garage SET color=?, finish=?, rims=?, windows=?, lights=? WHERE license=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6

[weatherUpdate]
SQL1_1 = UPDATE weather SET date=?, hour=?, weather=?, wind=?, fog=? WHERE id=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6
; --------------------------------------------------------------------------------
; SELECT
; --------------------------------------------------------------------------------

[playerInfo]
SQL1_1 = SELECT items, cash, bank, cop, ems, position, bankaccount, phoneBackground, messages, statuses, houselevel, housecontent, shopcontent, shopname, mafia, fire, legal, doughnuts, respawn FROM users WHERE uid=?
SQL1_INPUTS = 1
OUTPUT = 1,2,3,4,5,6,7,8,9,10,11,12,13,14-String,15,16,17,18,19

[getLicense]
SQL1_1 = SELECT license, class, color, owner FROM garage WHERE license=?;
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String,3-String,4-String

[getGarage]
SQL1_1 = SELECT license, class, color, finish, rims, windows, lights, statuses, owner, fuel, damage FROM garage WHERE owner=?;
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String,3-String,4-String,5-String, 6, 7, 8, 9-String

[getMafiaATM]
SQL1_1 = SELECT atm FROM mafiaatm WHERE id=?;
SQL1_INPUTS = 1
OUTPUT = 1

[getMail]
SQL1_1 = SELECT message, title, sender FROM mail WHERE receiver=?
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String, 3-String,4-String

[getMessages]
SQL1_1 = SELECT message, title, sender FROM messages WHERE receiver=?
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String, 3-String,4-String

[getMayor]
SQL1_1 = SELECT uid FROM users WHERE mayor=?
SQL1_INPUTS = 1
OUTPUT = 1-String

[existPlayerInfo]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT * FROM users WHERE uid = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1

[existLicense]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT * FROM garage WHERE license = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1

; --------------------------------------------------------------------------------
; INSERT
; --------------------------------------------------------------------------------

[insertPlayerInfo]
SQL1_1 = INSERT INTO users (uid, name, items, cash, bank, cop, ems, position, phoneBackground, messages, statuses, houselevel, housecontent, shopcontent, shopname, mafia, fire, legal) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18

[insertGarage]
SQL1_1 = INSERT INTO garage (license, class, color, finish, rims, windows, lights, owner,statuses) VALUE (?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9

[insertMail]
SQL1_1 = INSERT INTO mail (message, title, sender, receiver) VALUES (?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4

[insertMessage]
SQL1_1 = INSERT INTO messages (message, title, sender, receiver) VALUES (?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4


; --------------------------------------------------------------------------------
; DELETE
; --------------------------------------------------------------------------------

[deleteGarage]
SQL1_1 = DELETE FROM garage WHERE license=?
SQL1_INPUTS = 1

[deleteGarageDamage]
SQL1_1 = DELETE FROM garage WHERE damage=?
SQL1_INPUTS = 1

;;$CUSTOM_x$ allows you to insert dynamic text into an prepared statement.
;;Downside is the statement isn't cached + possible less secure. 

;;Note the order of passing inputs to extDB2 is important with custom inputs.
;; Its <inputs>:<custom_inputs>
;; So the inputs would be in this order _playerUID:_mapID:_value:_custom_1 


;; --------------------------------------------------------------------------------
;; COMPANIES
;; --------------------------------------------------------------------------------
[insertCompany]
SQL1_1 = INSERT INTO companies (short_name, name, uid_owner) VALUES (?,?,?)
SQL1_INPUTS = 1, 2, 3

[insertCompanyApplicant]
SQL1_1 = INSERT INTO company_applicants (id_company, uid_player) VALUES (?,?)
SQL1_INPUTS = 1, 2

[insertCompanyMember]
SQL1_1 = INSERT INTO company_members (id_company, uid_player, level) VALUES (?,?,?)
SQL1_INPUTS = 1, 2, 3

[insertCompanyVehicle]
SQL1_1 = INSERT INTO company_garage (id_company, license, class, color, finish, rims, windows, lights, statuses, skin) VALUE (?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10

[updateCompany]
SQL1_1 = UPDATE companies SET short_name=?, name=?, bank=?, members_current=?, members_max=?, level=? WHERE id=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7

[updateCompany_bank]
SQL1_1 = UPDATE companies SET bank=? WHERE id=?
SQL1_INPUTS = 1, 2

[updateCompany_level]
SQL1_1 = UPDATE companies SET level=? WHERE id=?
SQL1_INPUTS = 1, 2

[updateCompany_members] 
SQL1_1 = UPDATE companies SET members_current=?, members_max=? WHERE id=?
SQL1_INPUTS = 1, 2, 3

[updateCompanyMember]
SQL1_1 = UPDATE company_members SET level=? WHERE uid_player=?
SQL1_INPUTS = 1, 2

[updateCompanyVehicle_visual]
SQL1_1 = UPDATE company_garage SET color=?, finish=?, rims=?, windows=?, lights=?, skin=? WHERE license=?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7

[updateCompanyVehicle_statuses]
SQL1_1 = UPDATE company_garage SET fuel=?, damage=?, statuses=? WHERE license=?
SQL1_INPUTS = 1, 2, 3, 4

[updateCompanyVehicle_active]
SQL1_1 = UPDATE company_garage SET active=1 WHERE license=?
SQL1_INPUTS = 1

[updateCompanyVehicle_deactive]
SQL1_1 = UPDATE company_garage SET active=0 WHERE license=?
SQL1_INPUTS = 1

[updateCompanyVehicle_license]
SQL1_1 = UPDATE company_garage SET license=? WHERE license=?
SQL1_INPUTS = 1, 2

[updateCompanyVehicle_level]
SQL1_1 = UPDATE company_garage SET level=? WHERE license=?
SQL1_INPUTS = 1, 2

[deleteCompany]
SQL1_1 = DELETE FROM companies WHERE uid_owner=?
SQL1_INPUTS = 1

[deleteCompanyMember]
SQL1_1 = DELETE FROM company_members WHERE uid_player=?
SQL1_INPUTS = 1

[deleteCompanyVehicle]
SQL1_1 = DELETE FROM company_garage WHERE license=?
SQL1_INPUTS = 1

[deleteCompanyApplicant]
SQL1_1 = DELETE FROM company_applicants WHERE uid_player=? AND id_company=?
SQL1_INPUTS = 1, 2

[getCompany_id]
SQL1_1 = SELECT id, short_name, name, bank, uid_owner, members_current, members_max, level FROM companies WHERE id=?
SQL1_INPUTS = 1
OUTPUT = 1, 2-String, 3-String, 4, 5-String, 6, 7, 8

[getCompany_player]
SQL1_1 = SELECT companies.id, companies.short_name, companies.name, companies.bank, companies.uid_owner, companies.members_current, companies.members_max, companies.level, company_members.level FROM company_members INNER JOIN companies ON company_members.id_company=companies.id WHERE company_members.uid_player=?
SQL1_INPUTS = 1
OUTPUT = 1, 2-String, 3-String, 4, 5-String, 6, 7, 8, 9

[getCompanyApplicant_all]
SQL1_1 = SELECT company_applicants.id, company_applicants.id_company, company_applicants.uid_player, users.name FROM company_applicants INNER JOIN users ON company_applicants.uid_player=users.uid WHERE company_applicants.id_company=?
SQL1_INPUTS = 1
OUTPUT = 1, 2, 3-String, 4-String

[getCompanyVehicle_id]
SQL1_1 = SELECT license, class, color, finish, rims, windows, lights, skin, statuses, fuel, damage FROM company_garage WHERE license=?;
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String,3-String,4-String,5-String, 6, 7, 8-String, 9-String, 10-String, 11-String

[getCompanyVehicle_available]
SQL1_1 = SELECT license, class, color, finish FROM company_garage WHERE id_company=? AND active=0 AND level<=?;
SQL1_INPUTS = 1, 2
OUTPUT = 1-String, 2-String, 3-String, 4-String

[getCompanyVehicle_all]
SQL1_1 = SELECT license, class, color, finish, rims, windows, lights, skin, statuses, fuel, damage, level FROM company_garage WHERE id_company=?;
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String,3-String,4-String,5-String, 6, 7, 8-String, 9-String, 10-String, 11-String, 12-String


;; --------------------------------------------------------------------------------
;; SLPD
;; --------------------------------------------------------------------------------

[insertSLPDWanted]
SQL1_1 = INSERT INTO slpd_wanted (uid_suspect, uid_officer, charges, wanted_level, active) VALUES (?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5

[insertSLPDWantedVehicle]
SQL1_1 = INSERT INTO slpd_wanted_vehicle (plate, description, uid_officer, reason, wanted_level, active) VALUES (?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6

[insertSLPDTicket]
SQL1_1 = INSERT INTO slpd_tickets (uid_player, uid_officer, amount, reason, points) VALUES (?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5

[insertSLPDPrison]
SQL1_1 = INSERT INTO slpd_prison (uid_player, uid_officer, time_prison, time_left, reason) VALUES (?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5

[updateSLPDWanted_wanted]
SQL1_1 = UPDATE slpd_wanted SET wanted_level=? WHERE id=?
SQL1_INPUTS = 1, 2

[updateSLPDWanted_close]
SQL1_1 = UPDATE slpd_wanted SET wanted_level=0, active=0, uid_closed=? WHERE id=?
SQL1_INPUTS = 1, 2
 
[updateSLPDWantedVehicle_wanted]
SQL1_1 = UPDATE slpd_wanted_vehicle SET wanted_level=? WHERE id=?
SQL1_INPUTS = 1, 2

[updateSLPDWantedVehicle_close]
SQL1_1 = UPDATE slpd_wanted_vehicle SET wanted_level=0, active=0, uid_closed=? WHERE id=?
SQL1_INPUTS = 1, 2

[updateSLPDWantedVehicle_close_all]
SQL1_1 = UPDATE slpd_wanted_vehicle SET wanted_level=0, active=0, uid_closed=? WHERE plate=?
SQL1_INPUTS = 1, 2

[updateSLPDPrison_deactive]
SQL1_1 = UPDATE slpd_prison SET active=0 WHERE id=?
SQL1_INPUTS = 1

[updateSLPDPrison_escape]
SQL1_1 = UPDATE slpd_prison SET active=0 WHERE uid_player=?
SQL1_INPUTS = 1

[updateSLPDPrison_time]
SQL1_1 = UPDATE slpd_prison SET time_left=? WHERE id=?
SQL1_INPUTS = 1, 2

[updateSLPDPrison_active]
SQL1_1 = UPDATE slpd_prison SET active=1 WHERE id=?
SQL1_INPUTS = 1

[updateSLPDPrison_ended]
SQL1_1 = UPDATE slpd_prison SET active=0, time_left=0 WHERE uid_player=?
SQL1_INPUTS = 1

[updateSLPDPrison_finish]
SQL1_1 = UPDATE slpd_prison SET active=0, time_left=0 WHERE id=?
SQL1_INPUTS = 1

[getSLPDPrison_active]
SQL1_1 = SELECT id, uid_player, uid_officer, active, time_prison, time_left, reason FROM slpd_prison WHERE uid_player=? AND active=?
SQL1_INPUTS = 1, 2
OUTPUT = 1, 2-String, 3-String, 4, 5, 6, 7-String

[getSLPDWanted_case]
SQL1_1 = SELECT w.id, w.uid_suspect, s.name, w.uid_officer, o.name, w.charges, w.wanted_level, w.active FROM slpd_wanted w JOIN users s ON w.uid_suspect=s.uid JOIN users o ON w.uid_officer=o.uid WHERE w.id=?
SQL1_INPUTS = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDWanted_active]
SQL1_1 = SELECT w.id, w.uid_suspect, s.name, w.uid_officer, o.name, w.charges, w.wanted_level, w.active FROM slpd_wanted w JOIN users s ON w.uid_suspect=s.uid JOIN users o ON w.uid_officer=o.uid WHERE w.active=? AND s.connected=1 ORDER BY w.wanted_level DESC, w.id DESC LIMIT 30
SQL1_INPUTS = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDWanted_uid]
SQL1_1 = SELECT w.id, w.uid_suspect, s.name, w.uid_officer, o.name, w.charges, w.wanted_level, w.active FROM slpd_wanted w JOIN users s ON w.uid_suspect=s.uid JOIN users o ON w.uid_officer=o.uid WHERE w.uid_suspect=? AND w.active=? ORDER BY w.wanted_level DESC, w.id DESC LIMIT 30
SQL1_INPUTS = 1, 2
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDWantedVehicle_case]
SQL1_1 = SELECT v.id, v.plate, v.description, v.uid_officer, u.name, v.reason, v.wanted_level, v.active FROM slpd_wanted_vehicle v JOIN users u ON v.uid_officer=u.uid WHERE v.id=?
SQL1_INPUTS = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDWantedVehicle_active]
SQL1_1 = SELECT v.id, v.plate, v.description, v.uid_officer, u.name, v.reason, v.wanted_level, v.active FROM slpd_wanted_vehicle v JOIN users u ON v.uid_officer=u.uid WHERE v.active=? AND v.date > timestampadd(day, -7, now()) ORDER BY v.wanted_level DESC, v.id DESC LIMIT 30
SQL1_INPUTS = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDVehicle_plate]
SQL1_1 = SELECT g.license, g.class, g.color, g.finish, g.owner, u.name FROM garage g JOIN users u ON g.owner=u.uid WHERE g.license=?
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String, 3-String, 4-String, 5-String, 6-String

[getSLPDWantedVehicle_plate]
SQL1_1 = SELECT v.id, v.plate, v.description, v.uid_officer, u.name, v.reason, v.wanted_level, v.active FROM slpd_wanted_vehicle v JOIN users u ON v.uid_officer=u.uid WHERE v.plate=?
SQL1_INPUTS = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDticket_uid]
SQL1_1 = SELECT t.id, t.uid_player, s.name, t.uid_officer, o.name, t.reason, t.amount, t.points FROM slpd_tickets t JOIN users s ON t.uid_player=s.uid JOIN users o ON t.uid_officer=o.uid WHERE t.uid_player=? AND t.date > timestampadd(day, -7, now()) ORDER BY t.id DESC
SQL1_INPUTS = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7, 8

[getSLPDticket_points]
SQL1_1 = SELECT SUM(points) FROM slpd_tickets WHERE uid_player = ? AND date > timestampadd(day, -7, now())
SQL1_INPUTS = 1
OUTPUT = 1

[getSLPDplayerInfo_uid]
SQL1_1 = SELECT uid, name, cop, ems, fire, legal, statuses, cash, bank, houselevel FROM users WHERE uid=?
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String, 3, 4, 5, 6, 7, 8, 9, 10

[getSLPDplayerInfo_name]
SQL1_1 = SELECT uid FROM users WHERE name=?
SQL1_INPUTS = 1
OUTPUT = 1-String

[getSLPDPoliceStorage]
SQL1_1 = SELECT police FROM slpd_storage WHERE id=?
SQL1_INPUTS = 1
OUTPUT = 1

[updateSLPDPoliceStorage]
SQL1_1 = UPDATE slpd_storage SET police=? WHERE id=?
SQL1_INPUTS = 1, 2


;; --------------------------------------------------------------------------------
;; Log system
;; --------------------------------------------------------------------------------

[actionLog]
SQL1_1 = INSERT INTO log_action (playerUID, playerName, playerCash, playerBank, playerInv, type, text, unitUID, unitName, unitCash, unitBank, unitInv, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13

[vehicleLog]
SQL1_1 = INSERT INTO log_vehicle (playerUID, playerName, playerCash, playerBank, playerInv, type, text, vehicleClassname, vehicleName, amount) VALUES (?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10

[moneyLog]
SQL1_1 = INSERT INTO log_money (playerUID, playerName, playerCash, playerBank, playerInv, type, text, unitUID, unitName, unitCash, unitBank, unitInv, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13

[copLog]
SQL1_1 = INSERT INTO log_cop (playerUID, playerName, playerCash, playerBank, playerInv, type, text, unitUID, unitName, unitCash, unitBank, unitInv, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13

[deathLog]
SQL1_1 = INSERT INTO log_death (playerUID, playerName, playerCash, playerBank, playerInv, type, text, unitUID, unitName, unitCash, unitBank, unitInv, weapon, distance) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14

[economyLog]
SQL1_1 = INSERT INTO log_economy (playerUID, playerName, playerCash, playerBank, playerInv, type, text, unitUID, unitName, unitCash, unitBank, unitInv, price, item, quantity) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15

[adminLog]
SQL1_1 = INSERT INTO log_admin (playerUID, playerName, playerCash, playerBank, playerInv, type, text, unitUID, unitName, unitCash, unitBank, unitInv, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13

[craftLog]
SQL1_1 = INSERT INTO log_craft (playerUID, playerName, playerCash, playerBank, playerInv, type, text, classname, name) VALUES (?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9

[jobLog]
SQL1_1 = INSERT INTO log_job (playerUID, playerName, playerCash, playerBank, playerInv, type, text, unitUID, unitName, unitCash, unitBank, unitInv, amount) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13

[connectionLog]
SQL1_1 = INSERT INTO log_connection (playerUID, playerName, playerCash, playerBank, playerInv, type, text) VALUES (?,?,?,?,?,?,?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7
